---
title: "🐧(Day 07) Task : Linux Commands & Git Commands Cheat Sheet."
datePublished: Mon Apr 07 2025 14:55:11 GMT+0000 (Coordinated Universal Time)
cuid: cm9770uk0000m07jx3e9i70ek
slug: day-07-task-linux-commands-and-git-commands-cheat-sheet
cover: https://cdn.hashnode.com/res/hashnode/image/upload/v1744037619879/75968099-019b-470b-bcb3-a7d88a65d718.png
tags: linux, github, git, devops, devops-journey, tws, devopscommunity, trainwithshubham-tws-devops-devopscommunity-shubhamlondhe-automation-awswithtws-7daysofaws-aws-cli

---

# **🐧 Linux Commands Cheat Sheet :-**

## **File & Directory Operations :-**

* `ls` – List files in current directory.
    
* `ls -l` – Long listing format.
    
* `ls -a` – Show hidden files.
    
* `cd <dir>` – Change directory.
    
* `pwd` – Print current directory path.
    
* `mkdir <dir>` – Create new directory.
    
* `rmdir <dir>` – Remove empty directory.
    
* `rm <file>` – Remove file.
    
* `rm -r <dir>` – Remove directory with contents.
    
* `cp <src> <dest>` – Copy file/directory.
    
* `mv <src> <dest>` – Move/rename file/directory.
    

## **File Viewing & Editing :-**

* `cat <file>` – View file contents.
    
* `less <file>` – View file with scroll.
    
* `head <file>` – First 10 lines of file.
    
* `tail <file>` – Last 10 lines of file.
    
* `nano <file>` – Edit file using nano.
    
* `vim <file>` – Edit file using vim.
    

## **File Searching :-**

* `find <dir> -name <filename>` – Find file by name.
    
* `grep "<text>" <file>` – Search text in file.
    
* `grep -r "<text>" <dir>` – Recursively search in directory.
    

## **File Permissions :-**

* `chmod +x <file>` – Make file executable.
    
* `chmod 755 <file>` – Set read/write/execute for owner, read/execute for others.
    
* `chown user:group <file>` – Change file ownership.
    

## **System Info :-**

* `uname -a` – Kernel version.
    
* `top` – Real-time system processes.
    
* `df -h` – Disk usage.
    
* `free -h` – RAM usage.
    
* `uptime` – System uptime.
    
* `whoami` – Current user.
    

## **Package Management :-**

* `sudo apt update` – Update package list.
    
* `sudo apt upgrade` – Upgrade packages.
    
* `sudo apt install <package>` – Install package.
    
* `sudo apt remove <package>` – Remove package.
    

# **🐙 Git Commands Cheat Sheet :-**

## **Configuration :-**

* `git config --global` [`user.name`](http://user.name) `"Your Name"` – Set Git username.
    
* `git config --global` [`user.email`](http://user.email) `"`[`you@example.com`](mailto:you@example.com)`"` – Set Git email.
    
* `git config --list` – List config.
    

## **Repository Management :-**

* `git init` – Initialize new Git repo.
    
* `git clone <url>` – Clone remote repo.
    
* `git status` – Show repo status.
    
* `git log` – Show commit history.
    
* `git diff` – Show changes.
    

## **Staging & Committing :-**

* `git add <file>` – Stage file.
    
* `git add .` – Stage all changes.
    
* `git commit -m "message"` – Commit with message.
    
* `git commit -am "message"` – Add & commit tracked files.
    

## **Branching :-**

* `git branch` – List branches.
    
* `git branch <name>` – Create branch.
    
* `git checkout <name>` – Switch branch.
    
* `git checkout -b <name>` – Create and switch to new branch.
    
* `git merge <branch>` – Merge branch into current.
    

## **Remote Repositories :-**

* `git remote -v` – Show remote URLs.
    
* `git push origin <branch>` – Push changes.
    
* `git pull` – Pull latest changes.
    
* `git fetch` – Download changes.
    

## **Undoing Changes :-**

* `git reset <file>` – Unstage file.
    
* `git checkout -- <file>` – Discard file changes.
    
* `git revert <commit>` – Revert a commit.
    
* `git reset --hard <commit>` – Reset to commit.
